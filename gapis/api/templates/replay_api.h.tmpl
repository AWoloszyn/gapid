{{/*
 * Copyright (C) 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */}}

{{/* ---- Includes ---- */}}
{{Include "replay_common.tmpl"}}

{{/* ---- Overrides ---- */}}

{{$filename := print (Global "API") "_replay_api.h" }}
{{$ | Macro "R_API" | Reflow 4 | Write $filename}}
{{$api := print (Global "API")}}

{{define "R_API"}}
  {{AssertType $ "API"}}
  {{Template "C++.Copyright"}}
  {{$api := print (Global "API")}}
  {{$guard := print "REPLAY_" (Upper (Global "API")) "_API_H"}}
¶
  #ifndef {{$guard}}
  #define {{$guard}}
¶
  #include <stdint.h>
  #include <string>

¶
  namespace gapii {«
  void Setup_{{$api}}();
  {{ForEach (AllCommands $) "Process" | JoinWith "\n\n"}}

  bool Process(const std::string& name, const std::string& data);

  »} // namespace gapii
  #endif // {{$guard}}
¶
{{end}}

{{define "Process"}}
  {{AssertType $ "Function"}}
  {{if not (GetAnnotation $ "pfn")}}
    {{$name      := Macro "C++.MethodName" $}}
    {{$spyname   := Global "SpyName"}}
    {{$synthetic := GetAnnotation $ "synthetic"}}
    {{$retTy     := $.Return.Type}}

    bool Process_{{$name}}(const std::string& data);
    {{if not (IsVoid $.Return.Type)}}
    uint64_t Parent_{{$name}}(const std::string& _data);
    {{end}}
  {{end}}
{{end}}
